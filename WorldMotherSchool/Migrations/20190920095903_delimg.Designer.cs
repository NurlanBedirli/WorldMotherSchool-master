// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldMotherSchool.Models;

namespace WorldMotherSchool.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20190920095903_delimg")]
    partial class delimg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorldMotherSchool.Models.Association", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption");

                    b.Property<string>("Head");

                    b.Property<int>("LanguageId");

                    b.Property<int>("ResourcesViewId");

                    b.Property<decimal>("Salary");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.AzSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Footer");

                    b.Property<string>("Head");

                    b.Property<int>("LanguageId");

                    b.Property<string>("List");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("AzSections");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.DoctorControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption");

                    b.Property<int>("LanguageId");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("DoctorControls");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.EngSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Footer");

                    b.Property<string>("Head");

                    b.Property<int>("LanguageId");

                    b.Property<string>("List");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("EngSections");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.EventAbout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HeadCaption")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("date");

                    b.Property<int>("ResourcesViewId");

                    b.Property<string>("TextContent")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("EventAbouts");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Excursions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Head");

                    b.Property<int>("LanguageId");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("Excursions");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.HealthyFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Head");

                    b.Property<int>("LanguageId");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("HealthyFoods");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Culture");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.PhotoGalareya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Photo");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("PhotoGalareyas");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Psychological", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption");

                    b.Property<int>("LanguageId");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("Psychologicals");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.ResourcesView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ResourcesViews");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.RuSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Footer");

                    b.Property<string>("Head");

                    b.Property<int>("LanguageId");

                    b.Property<string>("List");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("RuSections");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.RuleAdmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption");

                    b.Property<string>("Head");

                    b.Property<int>("LanguageId");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("RuleAdmissions");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Head");

                    b.Property<int>("LanguageId");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("Securities");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.SlideFigure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("LanguageId");

                    b.Property<int>("ResourcesViewId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ResourcesViewId");

                    b.ToTable("SlideFigures");
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Association", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.AzSection", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.DoctorControl", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.EngSection", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.EventAbout", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Excursions", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.HealthyFood", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Photo", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.PhotoGalareya", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Psychological", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.RuSection", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.RuleAdmission", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.Security", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorldMotherSchool.Models.SlideFigure", b =>
                {
                    b.HasOne("WorldMotherSchool.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorldMotherSchool.Models.ResourcesView", "ResourcesView")
                        .WithMany()
                        .HasForeignKey("ResourcesViewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
